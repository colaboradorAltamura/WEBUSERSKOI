// ** MUI Components
import Grid from '@mui/material/Grid';

// ** Demo Components
import AboutOverivew from 'src/views/pages/user-profile/profile/AboutOverivew';
import ProjectsTable from 'src/views/pages/user-profile/profile/ProjectsTable';
import ActivityTimeline from 'src/views/pages/user-profile/profile/ActivityTimeline';
import ConnectionsTeams from 'src/views/pages/user-profile/profile/ConnectionsTeams';
import { IUser } from 'src/types/users';
import { useEffect, useState } from 'react';
import { dynamicGet } from 'src/services/entitiesDynamicServices';
import { IUsersAddress } from 'src/types/@autogenerated';
import { handleError } from 'src/@core/coreHelper';
import Loader from 'src/@core/components/loader';
import { Collections } from 'src/types/collectionsTypes';

// ** Types

const ProfileTab = ({ user }: { user: IUser }) => {
  const [addresses, setAddresses] = useState<IUsersAddress[] | null>(null);

  const [isLoadingAddresses, setIsLoadingAddresses] = useState<boolean>(true);

  useEffect(() => {
    try {
      const doAsync = async () => {
        setIsLoadingAddresses(true);
        const addresses = await dynamicGet({ params: '/cms/' + Collections.USERS_ADDRESSES + '/by-user/' + user.id });

        setAddresses(addresses.items);

        setIsLoadingAddresses(false);
      };
      doAsync();
    } catch (e) {
      setIsLoadingAddresses(false);
      handleError(e);
    }
  }, []);

  return (
    <Grid container spacing={6}>
      <Grid item lg={4} md={5} xs={12}>
        {isLoadingAddresses && <Loader />}
        {addresses && <AboutOverivew user={user} addresses={addresses} />}
      </Grid>
      <Grid item lg={8} md={7} xs={12}>
        <Grid container spacing={6}>
          <Grid item xs={12}>
            <ActivityTimeline />
          </Grid>
          {/* <ConnectionsTeams connections={data.connections} teams={data.teamsTech} /> */}
        </Grid>
      </Grid>
    </Grid>
  );
};

export default ProfileTab;
